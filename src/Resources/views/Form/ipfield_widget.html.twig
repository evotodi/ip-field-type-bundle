{% block ip_widget %}
    {% apply spaceless %}

        {% if id is not defined %}
            {% set id = form.vars.id %}
        {% endif %}

        {% set cls = "" %}

        {% if class is defined %}
            {% set cls = class %}
        {% endif %}

        {% set id_func = id|replace({'-': "_", '*': '_', '/': '_', '+': '_'}) %}
        {% set fname = form.vars.full_name|split('[')[0] %}
        {% set valData = value|split(ip_conf['sep']) %}

        {% if valData[0] == ''%}
            {% set valData = null %}
        {% endif %}

        <div id="ip_div_field_{{ id }}">
            {% for i in 0..ip_conf['group'] - 1 %}
                {% if i != 0 %}{{ ip_conf['sep'] }}{% endif %}
                <input id="{{ id ~ i }}" class="{{ cls }}" data-parent="{{ id }}"
                       oninput="ip_check_input_{{ id_func }}(this, {{ i }})"
                       maxlength="{{ ip_conf['chars_max'] }}"
                       minlength="{{ ip_conf['chars_min'] }}"
                       style="width: {{ ip_conf['group_length'] * 10 }}px; padding: 0; margin: 0; border-style: solid; text-align: center;"
                       autocomplete="off" {% if ip_conf['required'] %}required="required"{% endif %} {% if disabled %}disabled="disabled"{% endif %} {% if readonly %}readonly="readonly"{% endif %}
                       {% if valData is defined and valData is not empty %}value="{{ valData[i] }}"{% endif %}
                />
            {% endfor %}
            {% if ip_conf['clear'] %}
                <a id="ip_clear_{{ id }}" href="javascript:void(0)" onclick="ip_clear_input_{{ id_func }}();" style="margin-left: 1em;">clear</a>
            {% endif %}

            <script type="text/javascript">
                function ip_check_input_{{ id_func }} (input, idx) {
                    let typedChar = input.value.slice(-1);

                    if (input.length === 0) {
                        return;
                    }

                    let value = parseInt(input.value, {{ ip_conf['base'] }});

                    if (isNaN(value)) {
                        value = "";
                    }

                    if (value < 0) {
                        value = 0;
                    } else if (value > {{ ip_conf['max_value'] }}) {
                        value = {{ ip_conf['max_value'] }};
                        ip_valid_input_{{ id_func }}(value, idx);
                    }

                    input.value = value.toString({{ ip_conf['base'] }});

                    if (typedChar === "{{ ip_conf['sep'] }}" && idx < {{ ip_conf['group'] - 1 }} && input.value.length > 0) {
                        document.getElementById("{{ id }}" + (idx + 1)).focus();
                    }else if(input.value.length === {{ ip_conf['chars_max'] }} && idx < {{ ip_conf['group'] - 1 }}) {
                        document.getElementById("{{ id }}" + (idx + 1)).focus();
                    }

                    ip_update_real_{{ id_func }}();
                }

                function ip_valid_input_{{ id_func }}(digit, idx) {
                    digit = digit.replace(/[:\.]/g, "");
                    let hidden = document.getElementById("{{ id }}");
                    let split_ip = hidden.value.split("{{ ip_conf['sep'] }}");
                    split_ip[idx] = digit.toString({{ ip_conf['base'] }});
                    hidden.value = split_ip.join("{{ ip_conf['sep'] }}");
                }

                function ip_clear_input_{{ id_func }}() {
                    for(let i = 0; i < {{ ip_conf['group'] }}; i++) {
                        let el = document.getElementById("{{ id }}" + i);
                        el.value = '';
                    }
                    let el = document.getElementById("{{ id }}");
                    el.value = '';
                }

                function ip_update_real_{{ id_func }}() {
                    let val = '';
                    for(let i = 0; i < {{ ip_conf['group'] }}; i++) {
                        let el = document.getElementById("{{ id }}" + i);
                        val = val + el.value + "{{ ip_conf['sep'] }}";
                    }
                    val = val.slice(0, -1);

                    let el = document.getElementById("{{ id }}");
                    el.value = val;
                }
            </script>
            {{ block('hidden_widget') }}
        </div>
    {% endapply %}
{% endblock %}
